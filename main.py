import telebot
from connections import bot_token
from markups import start_markup, quantity_markup, address_markup, profile_markup

user_data = {}
form_status = None

bot = telebot.TeleBot(bot_token)

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Çüëã –û–±–µ—Ä–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É , —è–∫—É —Ö–æ—á–µ—à –∫—É–ø–∏—Ç–∏ –∞–±–æ –º–æ–∂–µ—à –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–≤—ñ–π –±–∞–ª–∞–Ω—Å", reply_markup=start_markup)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    global form_status
    chat_id = call.message.chat.id
    if call.data in ['BNB', 'TRX', 'MATIC', 'SOL', 'ETH', 'SUI', 'APTOS']:
        bot.send_message(chat_id, f"–û–±—Ä–∞–Ω–æ {call.data}. –í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å üî¢", reply_markup=quantity_markup)
        user_data[chat_id] = {'coin': call.data, 'status': 'filling'}
        form_status = "quantity"
    elif call.data == 'profile':
        bot.send_message(chat_id, "–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ–±–µ üì±", reply_markup=profile_markup)

@bot.message_handler(func=lambda message: message.chat.id in user_data and form_status == "quantity")
def handle_quantity(message):
    global form_status
    chat_id = message.chat.id
    quantity = message.text
    user_data[chat_id]['quantity'] = quantity
    bot.send_message(chat_id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –∞–¥—Ä–µ—Å—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è BNB üíå", reply_markup=address_markup)
    form_status = "address"

@bot.message_handler(func=lambda message: message.chat.id in user_data and form_status == 'address')
def handle_address(message):
    global form_status
    chat_id = message.chat.id
    address = message.text
    user_data[chat_id]['address'] = address
    user_data[chat_id]['status'] = 'complete'
    bot.send_message(chat_id, "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞.")
    form_status = None

# RUN
bot.infinity_polling()